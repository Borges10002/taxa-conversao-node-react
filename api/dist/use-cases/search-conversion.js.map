{"version":3,"sources":["../../src/use-cases/search-conversion.ts"],"sourcesContent":["import { ConversionRepository } from \"@/repositories/conversion-repository\";\r\n\r\ninterface Request {\r\n  channel: string;\r\n  endDate: string;\r\n  startDate: string;\r\n  status: string;\r\n}\r\n\r\ninterface SearchConversioUseCaseResponse {\r\n  conversion: any[];\r\n}\r\n\r\nexport class SearchConversionUseCase {\r\n  constructor(private conversionRepository: ConversionRepository) {}\r\n\r\n  async execute(params: Request): Promise<SearchConversioUseCaseResponse> {\r\n    const result =\r\n      await this.conversionRepository.getConversionRateOverTime(params);\r\n\r\n    const conversion = result.map((row) => ({\r\n      channel: row.channel,\r\n      date: row.date,\r\n      total_sent: Number(row.total_sent),\r\n      total_viewed: Number(row.total_viewed),\r\n      conversion_rate: Number(row.conversion_rate),\r\n    }));\r\n\r\n    return {\r\n      conversion,\r\n    };\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAaO,IAAM,0BAAN,MAA8B;AAAA,EACnC,YAAoB,sBAA4C;AAA5C;AAAA,EAA6C;AAAA,EAEjE,MAAM,QAAQ,QAA0D;AACtE,UAAM,SACJ,MAAM,KAAK,qBAAqB,0BAA0B,MAAM;AAElE,UAAM,aAAa,OAAO,IAAI,CAAC,SAAS;AAAA,MACtC,SAAS,IAAI;AAAA,MACb,MAAM,IAAI;AAAA,MACV,YAAY,OAAO,IAAI,UAAU;AAAA,MACjC,cAAc,OAAO,IAAI,YAAY;AAAA,MACrC,iBAAiB,OAAO,IAAI,eAAe;AAAA,IAC7C,EAAE;AAEF,WAAO;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF;","names":[]}