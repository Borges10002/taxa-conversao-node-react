{"version":3,"sources":["../../src/use-cases/create-conversion.ts","../../src/use-cases/errors/id-already-exists.ts"],"sourcesContent":["import { ConversionRepository } from \"@/repositories/conversion-repository\";\nimport { Event as PrismaEvent } from \"@prisma/client\";\nimport { IdAlreadyExists } from \"./errors/id-already-exists\";\n\ninterface CreateConversionUseCaseRequest {\n  id: number;\n  origin: string;\n  response_status_id: number;\n}\n\ninterface CreateConversionUseCaseResponse {\n  event: PrismaEvent;\n}\n\nexport class CreateConversionUseCase {\n  constructor(private conversionRepository: ConversionRepository) {}\n\n  async execute({\n    id,\n    origin,\n    response_status_id,\n  }: CreateConversionUseCaseRequest): Promise<CreateConversionUseCaseResponse> {\n    const ev = await this.conversionRepository.findById(id);\n\n    console.log(ev);\n\n    if (ev) {\n      throw new IdAlreadyExists();\n    }\n\n    const event = await this.conversionRepository.create({\n      id,\n      origin,\n      response_status_id,\n    });\n\n    return { event };\n  }\n}\n","export class IdAlreadyExists extends Error {\n  constructor() {\n    super(\"id already exists\");\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,kBAAN,cAA8B,MAAM;AAAA,EACzC,cAAc;AACZ,UAAM,mBAAmB;AAAA,EAC3B;AACF;;;ADUO,IAAM,0BAAN,MAA8B;AAAA,EACnC,YAAoB,sBAA4C;AAA5C;AAAA,EAA6C;AAAA,EAEjE,MAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAA6E;AAC3E,UAAM,KAAK,MAAM,KAAK,qBAAqB,SAAS,EAAE;AAEtD,YAAQ,IAAI,EAAE;AAEd,QAAI,IAAI;AACN,YAAM,IAAI,gBAAgB;AAAA,IAC5B;AAEA,UAAM,QAAQ,MAAM,KAAK,qBAAqB,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO,EAAE,MAAM;AAAA,EACjB;AACF;","names":[]}