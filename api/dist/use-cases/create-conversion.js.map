{"version":3,"sources":["../../src/use-cases/create-conversion.ts","../../src/use-cases/errors/id-already-exists.ts"],"sourcesContent":["import { ConversionRepository } from \"@/repositories/conversion-repository\";\r\nimport { Event as PrismaEvent } from \"@prisma/client\";\r\nimport { IdAlreadyExists } from \"./errors/id-already-exists\";\r\n\r\ninterface CreateConversionUseCaseRequest {\r\n  id: number;\r\n  origin: string;\r\n  response_status_id: number;\r\n}\r\n\r\ninterface CreateConversionUseCaseResponse {\r\n  event: PrismaEvent;\r\n}\r\n\r\nexport class CreateConversionUseCase {\r\n  constructor(private conversionRepository: ConversionRepository) {}\r\n\r\n  async execute({\r\n    id,\r\n    origin,\r\n    response_status_id,\r\n  }: CreateConversionUseCaseRequest): Promise<CreateConversionUseCaseResponse> {\r\n    const ev = await this.conversionRepository.findById(id);\r\n\r\n    console.log(ev);\r\n\r\n    if (ev) {\r\n      throw new IdAlreadyExists();\r\n    }\r\n\r\n    const event = await this.conversionRepository.create({\r\n      id,\r\n      origin,\r\n      response_status_id,\r\n    });\r\n\r\n    return { event };\r\n  }\r\n}\r\n","export class IdAlreadyExists extends Error {\r\n  constructor() {\r\n    super(\"id already exists\");\r\n  }\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAO,IAAM,kBAAN,cAA8B,MAAM;AAAA,EACzC,cAAc;AACZ,UAAM,mBAAmB;AAAA,EAC3B;AACF;;;ADUO,IAAM,0BAAN,MAA8B;AAAA,EACnC,YAAoB,sBAA4C;AAA5C;AAAA,EAA6C;AAAA,EAEjE,MAAM,QAAQ;AAAA,IACZ;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAA6E;AAC3E,UAAM,KAAK,MAAM,KAAK,qBAAqB,SAAS,EAAE;AAEtD,YAAQ,IAAI,EAAE;AAEd,QAAI,IAAI;AACN,YAAM,IAAI,gBAAgB;AAAA,IAC5B;AAEA,UAAM,QAAQ,MAAM,KAAK,qBAAqB,OAAO;AAAA,MACnD;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,WAAO,EAAE,MAAM;AAAA,EACjB;AACF;","names":[]}