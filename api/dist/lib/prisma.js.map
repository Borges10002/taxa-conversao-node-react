{"version":3,"sources":["../../src/lib/prisma.ts","../../src/env/index.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { env } from \"@/env\";\n\nexport const prisma = new PrismaClient({\n  log: env.NODE_ENV === \"dev\" ? [\"error\"] : [],\n});\n","import \"dotenv/config\";\nimport { z } from \"zod\";\n\nconst envSchema = z.object({\n  NODE_ENV: z.enum([\"dev\", \"test\", \"production\"]).default(\"dev\"),\n  JWT_SECRET: z.string(),\n  PORT: z.coerce.number().default(3333),\n});\n\nconst _env = envSchema.safeParse(process.env);\n\nif (_env.success === false) {\n  console.error(\"‚ùå Invalid environment variables\", _env.error.format());\n\n  throw new Error(\"Invalid environment variables.\");\n}\n\nexport const env = _env.data;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6B;;;ACA7B,oBAAO;AACP,iBAAkB;AAElB,IAAM,YAAY,aAAE,OAAO;AAAA,EACzB,UAAU,aAAE,KAAK,CAAC,OAAO,QAAQ,YAAY,CAAC,EAAE,QAAQ,KAAK;AAAA,EAC7D,YAAY,aAAE,OAAO;AAAA,EACrB,MAAM,aAAE,OAAO,OAAO,EAAE,QAAQ,IAAI;AACtC,CAAC;AAED,IAAM,OAAO,UAAU,UAAU,QAAQ,GAAG;AAE5C,IAAI,KAAK,YAAY,OAAO;AAC1B,UAAQ,MAAM,wCAAmC,KAAK,MAAM,OAAO,CAAC;AAEpE,QAAM,IAAI,MAAM,gCAAgC;AAClD;AAEO,IAAM,MAAM,KAAK;;;ADdjB,IAAM,SAAS,IAAI,2BAAa;AAAA,EACrC,KAAK,IAAI,aAAa,QAAQ,CAAC,OAAO,IAAI,CAAC;AAC7C,CAAC;","names":[]}